<?php
namespace JeffAdmin\Model\Behavior;

use ArrayObject;
use Cake\Core\Configure;
use Cake\Database\Connection;
use Cake\Database\Type;
use Cake\Datasource\ConnectionInterface;
use Cake\Datasource\ConnectionManager;
use Cake\Event\Event;
use Cake\I18n\I18n;
use Cake\I18n\Number;
use Cake\I18n\Time;
use Cake\ORM\Behavior;
use Cake\ORM\Table;
use IntlDateFormatter;
use Cake\ORM\Exception\MissingBehaviorException;

//use Cake\Database\Schema\TableSchema;
use Cake\Database\Schema\Collection;

class DatepickerBehavior extends Behavior
{

	// https://stackoverflow.com/questions/31197051/beforemarshal-does-not-modify-request-data-when-validation-fails
	// https://stackoverflow.com/questions/20334355/how-to-get-protected-property-of-object-in-php
	
	private $_dateformats = [
		'date' 		=> 'yyyy-MM-dd',
		'time' 		=> 'HH:mm:ss',
		'datetime' 	=> 'yyyy-MM-dd HH:mm:ss',
	];

	function getProtectedValue($obj, $name)
	{
		$ret = [];
		$array = (array)$obj;
		$prefix = chr(0).'*'.chr(0);
		$ret = $array[$prefix.'_connection'];
		return $ret;
	}
	
	
	function accessProtected($obj, $prop) {
		$reflection = new \ReflectionClass($obj);
		$property = $reflection->getProperty($prop);
		$property->setAccessible(true);
		return $property->getValue($obj);
	}	
	
	function object_to_array($data)
	{
		if (is_array($data) || is_object($data))
		{
			$result = array();
			foreach ($data as $key => $value)
			{
				$result[$key] = object_to_array($value);
			}
			return $result;
		}
		return $data;
	}
	
	
    public function beforeMarshal(Event $event, ArrayObject $data, ArrayObject $options)
	{	
		die('xxxxxxxxxxxxxx');
		return null;
		//debug($event);
		//debug($data);
		//debug($options);
		//die();	
		$subject 		= $event->getSubject();		
		$connection 	= $this->getProtectedValue($subject, '_connection');
		$logger 		= $this->accessProtected($connection, '_logger');
		$conn 			= $this->accessProtected($logger, '_connectionName');	// Enek még utána kell járni, hogy valóban a helyes kapcsolatot mutatja! Le kell tesztelni!!
		$table 			= $this->accessProtected($subject, '_table');
		$db 			= ConnectionManager::get($conn);
		$collection 	= $db->getSchemaCollection();
		$tables 		= $collection->listTables();
		$tableSchema	= $collection->describe($table);
		$columns 		= $this->accessProtected($tableSchema, '_columns');

		// Mező nevek és az attribútumai egy tömbbe kerülnek.
		$fields = [];
		foreach($columns as $col => $c){
			$fields[$col] = $c;
		}

		foreach($data as $key => $value)
		{			
			if( isset($fields[$key]['type']) && $fields[$key]['type'] != '')	// $fields[$key]['type'] -> field type
			{
				//debug($fields); //die();
				
				switch( $fields[$key]['type'] )
				{
					case 'date': 
						$data[$key] = Time::parseDate( $data[$key] );
						break;
					case 'time': 
						debug( $data );
						$data[$key] = Time::parseTime( $data[$key] );
						debug( $data );
						//die();
						break;
					case 'datetime': 
						$data[$key] = Time::parseDateTime( $data[$key] );
						break;
					//case 'integer': 
						// have to carry on ...
						//$data[$key] = ...( $data[$key] );
						//break;
				}
				//debug( $key );
				//debug( $fields[$key] );
				
			}
		}
		
		//die();
		
	}	// beforeMarhal()
	
}
